generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id           Int     @id @default(autoincrement())
  name         String
  email        String  @unique
  passwordHash String
  role         Role    @default(USER)
  polls        Poll[]  @relation("creator_polls")
  votes        Vote[]
  createdAt    DateTime @default(now())
}

model Poll {
  id            Int          @id @default(autoincrement())
  question      String
  isPublished   Boolean      @default(false)
  isClosed      Boolean      @default(false)
  publishAt     DateTime?
  creatorUserId Int
  creator       User         @relation("creator_polls", fields: [creatorUserId], references: [id])
  options       PollOption[]
  votes         Vote[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model PollOption {
  id      Int    @id @default(autoincrement())
  text    String
  pollId  Int
  poll    Poll   @relation(fields: [pollId], references: [id])
  votes   Vote[]
}

model Vote {
  id           Int         @id @default(autoincrement())
  userId       Int
  user         User        @relation(fields: [userId], references: [id])
  pollOptionId Int
  pollOption   PollOption  @relation(fields: [pollOptionId], references: [id])
  pollId       Int
  poll         Poll        @relation(fields: [pollId], references: [id])
  createdAt    DateTime    @default(now())

  @@unique([userId, pollId])
}